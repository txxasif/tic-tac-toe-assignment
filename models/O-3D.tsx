/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh1: THREE.Mesh;
  };
  materials: object;
};

export default function OModel({
  color,
  scale,
  ...props
}: JSX.IntrinsicElements["group"] & {
  color?: string;
  scale?: number;
}) {
  const { nodes } = useGLTF("/models/O.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} scale={scale}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh1.geometry}
        material={nodes.Mesh1.material}
      />
      <meshBasicMaterial color={color} />
    </group>
  );
}

useGLTF.preload("/models/O.glb", false, false, undefined);
