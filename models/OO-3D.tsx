/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh: THREE.Mesh;
  };
  materials: {
    base_material: THREE.MeshStandardMaterial;
  };
};

export function OOModel({
  scale,
  ...props
}: JSX.IntrinsicElements["group"] & {
  scale?: number;
}) {
  const { nodes, materials } = useGLTF("/O.glb") as GLTFResult;
  return (
    <group scale={scale} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh.geometry}
        material={materials.base_material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={1.67}
      />
    </group>
  );
}

useGLTF.preload("/O.glb", false, false);
